{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","comps/ImageGrid.js","hooks/useFirestore.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snapshot","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","console","ProgressBar","setFile","div","initial","scaleX","animate","UploadForm","allowedTypes","type","onChange","event","selected","target","files","includes","ImageGrid","setSelectedImg","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","useFirestore","log","map","layout","whileHover","opacity","key","onClick","img","transition","delay","src","alt","Modal","selectedImg","classList","contains","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b029def.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","  import * as firebase from \"firebase/app\";\n  import \"firebase/storage\";\n  import \"firebase/firestore\";\n  \n  // Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyBtaDDhBD2BNe5zg2SfSrUEMxf8L4pu99A\",\n    authDomain: \"firegram-ec7e3.firebaseapp.com\",\n    databaseURL: \"https://firegram-ec7e3.firebaseio.com\",\n    projectId: \"firegram-ec7e3\",\n    storageBucket: \"firegram-ec7e3.appspot.com\",\n    messagingSenderId: \"795536117238\",\n    appId: \"1:795536117238:web:6702a7cf0b36abc4638bd7\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const projectStorage = firebase.storage();\n  const projectFirestore = firebase.firestore();\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\n  export { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from \"react\";\nimport { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\n\nfunction useStorage(file) {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    useEffect(() => {\n        // references\n        const storageRef = projectStorage.ref(file.name);\n        const collectionRef = projectFirestore.collection(\"images\");\n\n        storageRef.put(file).on(\"state_changed\", (snapshot) => {\n            let percentage = (snapshot.bytesTransferred / snapshot.totalBytes);\n\n            setProgress(percentage);\n        }, (err) => {\n            setError(err);\n        }, async () => {\n            try {\n                const url = await storageRef.getDownloadURL();\n                const createdAt = timestamp();\n\n                collectionRef.add({ url, createdAt });\n                setUrl(url);\n                \n            } catch (err) {\n                console.error(err);\n            }\n        });\n\n    }, [file]);\n\n    return {\n        progress,\n        url,\n        error\n    };\n\n}\n\nexport default useStorage;","import React, { useEffect } from 'react';\nimport useStorage from \"../hooks/useStorage\";\nimport { motion } from \"framer-motion\";\n\nexport default function ProgressBar({ file, setFile }) {\n    const { url, progress } = useStorage(file);\n\n    useEffect(() => {\n        if (url) {\n            setFile(null);\n        }\n\n    }, [url, setFile]);\n\n    return (\n        <motion.div className=\"progress-bar\"\n            initial={{ scaleX: 0 }}\n            animate={{ scaleX: progress }}\n        ></motion.div>\n    );\n}\n","import React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nexport default function UploadForm() {\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState(null);\n\n    const allowedTypes = [\"image/png\", \"image/jpeg\"];\n\n    function changeHandler(event) {\n        const selected = event.target.files[0];\n        \n        if (selected && allowedTypes.includes(selected.type)) {\n            setFile(selected);\n            setError(\"\");\n        } else {\n            setFile(null);\n            setError(\"Please select an image file (png or jpeg).\");\n        }\n    }\n\n    return (\n        <form>\n            <input type=\"file\" onChange={changeHandler}/>\n            <div className=\"output\">\n                {error && <p className=\"error\">{error}</p>}\n                {file && <p>{file.name}</p>}\n                {file && <ProgressBar file={file} setFile={setFile} />}\n            </div>\n        </form>\n    );\n}\n","import React from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from \"framer-motion\";\n\nexport default function ImageGrid({ setSelectedImg }) {\n    const { docs } = useFirestore(\"images\");\n    console.log(docs);\n\n    return (\n        <div className=\"img-grid\">\n            {docs && docs.map(doc => (\n                <motion.div\n                    layout\n                    whileHover={{ opacity: 1 }}\n                    className=\"img-wrap\"\n                    key={doc.id}\n                    onClick={() => setSelectedImg(doc.url)}\n                >\n                    <motion.img\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        transition={{ delay: 1 }}\n                        src={doc.url}\n                        alt=\"User created img\"\n                    />\n                </motion.div>\n            ))}\n        </div>\n    );\n}\n","import { useState, useEffect } from 'react';\nimport { projectFirestore } from \"../firebase/config\";\n\nexport default function useFirestore(collection) {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(() => {\n        const unsub = projectFirestore\n            .collection(collection)\n            .orderBy(\"createdAt\", \"desc\")\n            .onSnapshot(snapshot => {\n                let documents = [];\n\n                snapshot.forEach(doc => {\n                    documents.push({ ...doc.data(), id: doc.id });\n                });\n\n                setDocs(documents);\n            });\n\n        return () => unsub(); // unsub during cleanup\n\n    }, [collection]);\n\n    return { docs };\n}\n","import React from 'react';\nimport { motion } from \"framer-motion\";\n\nexport default function Modal({ selectedImg, setSelectedImg }) {\n    function handleClick(event) {\n        if (event.target.classList.contains(\"backdrop\")) {\n            setSelectedImg(null);\n        }\n    }\n\n    return (\n        <motion.div\n            className=\"backdrop\"\n            onClick={handleClick}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n        >\n            <img src={selectedImg} alt=\"Fullsize img\" />\n        </motion.div>\n    );\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from \"./comps/Modal\";\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}